-- 코드를 작성해주세요
WITH TOTAL_HAVING_SKILL_CODE AS (
SELECT  A.CODE AS HAVING_SKILL_CODE,
        A.NAME AS SKILL_NAME,
        A.CATEGORY AS SKILL_CATEGORY,
        B.ID,
        B.EMAIL
FROM    SKILLCODES AS A, DEVELOPERS AS B
WHERE   (A.CODE & B.SKILL_CODE) > 0
),

A_GRADE_STU_ID AS (

SELECT   ID, 'A' AS GRADE
    FROM(
        SELECT   DISTINCT ID, SKILL_CATEGORY
        FROM     TOTAL_HAVING_SKILL_CODE
        WHERE    SKILL_NAME = 'Python'
            OR   SKILL_CATEGORY = 'Front End'
) AS Z
GROUP BY ID
HAVING COUNT(*) >= 2
),

B_GRADE_STU_ID AS (

SELECT   ID, 'B' AS GRADE
FROM     TOTAL_HAVING_SKILL_CODE
WHERE    SKILL_NAME = 'C#'
    AND  ID NOT IN (SELECT ID FROM A_GRADE_STU_ID)
),

C_GRADE_STU_ID AS (

SELECT   ID, 'C' AS GRADE 
FROM     TOTAL_HAVING_SKILL_CODE
WHERE    SKILL_CATEGORY = 'Front End'
    AND  ID NOT IN (SELECT ID FROM A_GRADE_STU_ID UNION SELECT ID FROM B_GRADE_STU_ID)
),

TOTAL_GRADE_TBL AS (
    SELECT  ID, GRADE
    FROM    A_GRADE_STU_ID
    UNION
    SELECT  ID, GRADE
    FROM    B_GRADE_STU_ID
    UNION
    SELECT  ID, GRADE
    FROM    C_GRADE_STU_ID
)

SELECT  B.GRADE, A.ID, A.EMAIL
FROM    DEVELOPERS AS A, TOTAL_GRADE_TBL AS B 
WHERE   A.ID = B.ID
ORDER BY GRADE ASC, ID ASC